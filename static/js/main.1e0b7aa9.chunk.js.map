{"version":3,"sources":["components/PhoneBook/PhoneBook.styled.jsx","components/PhoneBookForm/PhoneBookForm.styled.jsx","components/PhoneBook/PhoneBookListItem.jsx","components/PhoneBook/PhoneBookList.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/PhoneBook/PhoneBookFilter.jsx","components/helpers/FilterContacts.jsx","App.js","index.js"],"names":["Aside","Block","Item","Form","Button","Label","Input","PhoneBookListItem","name","number","onDeleteContact","id","onClick","PhoneBookList","contacts","map","PhoneBookForm","onInput","onAddContact","action","onSubmit","htmlFor","type","value","pattern","title","required","placeholder","PhoneBookFilter","onSetFilter","filterValue","filterContacts","filter","obj","toLowerCase","includes","trim","App","useState","setContacts","setName","setNumber","setFilter","useEffect","localStorage","setItem","JSON","stringify","handleChangeInput","e","target","contactsArray","preventDefault","some","el","alert","contact","uuidv4","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e0b7aa9.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\r\nexport const Aside = styled.aside`\r\n  background-color: #1035ad;\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  width: 300px;\r\n  padding: 15px;\r\n`;\r\nexport const Block = styled.div`\r\n  padding: 15px;\r\n\r\n  border: 3px solid #fff;\r\n  border-radius: 10px;\r\n`;\r\nexport const Item = styled.li`\r\n  padding: 15px;\r\n  font-weight: 500;\r\n  color: #71b609;\r\n`;\r\n","import styled from \"@emotion/styled/macro\";\r\nexport const Form = styled.form`\r\n  padding: 15px;\r\n`;\r\nexport const Button = styled.button`\r\n  box-sizing: border-box;\r\n  background-color: transparent;\r\n  border: 2px solid #e74c3c;\r\n  border-radius: 0.6em;\r\n  color: #e74c3c;\r\n  cursor: pointer;\r\n  line-height: 1;\r\n  padding: 1.2em 2.8em;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  border-radius: 3em;\r\n  border-color: #2ecc71;\r\n  color: #2ecc71;\r\n  margin-top: 15px;\r\n  width: 200px;\r\n  background-image: linear-gradient(to bottom, transparent 50%, #2ecc71 50%);\r\n\r\n  &:hover {\r\n    color: #fff;\r\n    background-position: 0 100%;\r\n  }\r\n`;\r\nexport const Label = styled.label`\r\n  color: #2ecc71;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 180px;\r\n  padding: 10px;\r\n  border-radius: 1em;\r\n  background-color: #2ecc71;\r\n  outline: none;\r\n  &:focus {\r\n    background-color: #9bb9e9;\r\n  }\r\n  &::placeholder {\r\n    color: #5f91e2;\r\n  }\r\n`;\r\n","import { Item } from \"./PhoneBook.styled\";\r\nimport { Button } from \"../PhoneBookForm/PhoneBookForm.styled\";\r\n\r\nfunction PhoneBookListItem({ name, number, onDeleteContact, id }) {\r\n  return (\r\n    <Item>\r\n      <p>\r\n        {name} : {number}\r\n      </p>\r\n\r\n      <Button onClick={onDeleteContact} id={id}>\r\n        Delete\r\n      </Button>\r\n    </Item>\r\n  );\r\n}\r\nexport default PhoneBookListItem;\r\n","import PhoneBookListItem from \"./PhoneBookListItem\";\r\n\r\nfunction PhoneBookList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <PhoneBookListItem\r\n            key={id}\r\n            number={number}\r\n            name={name}\r\n            id={id}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nexport default PhoneBookList;\r\n","import { Form, Button, Label, Input } from \"./PhoneBookForm.styled\";\r\nfunction PhoneBookForm({ onInput, onAddContact, name, number }) {\r\n  return (\r\n    <Form action=\"\" onSubmit={onAddContact}>\r\n      <Label htmlFor=\"\">\r\n        <p>Name </p>\r\n        <Input\r\n          onInput={onInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"Search name\"\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"\">\r\n        <p>Number</p>\r\n        <Input\r\n          onInput={onInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"Search number\"\r\n        />\r\n      </Label>\r\n      <Button>Add contact</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default PhoneBookForm;\r\n","import { Label, Input } from \"../PhoneBookForm/PhoneBookForm.styled\";\r\n\r\nfunction PhoneBookFilter({ onSetFilter, filterValue }) {\r\n  return (\r\n    <Label>\r\n      <p>Filter contacts by name: </p>\r\n      <Input\r\n        name=\"filter\"\r\n        onInput={onSetFilter}\r\n        type=\"text\"\r\n        value={filterValue}\r\n        placeholder=\"Name\"\r\n      />\r\n    </Label>\r\n  );\r\n}\r\n\r\nexport default PhoneBookFilter;\r\n","function filterContacts(contacts, filter) {\r\n  return contacts.filter((obj) => {\r\n    return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\r\n  });\r\n}\r\nexport default filterContacts;\r\n","import { useState, useEffect } from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport PhoneBookList from \"./components/PhoneBook/PhoneBookList\";\nimport PhoneBookForm from \"./components/PhoneBookForm/PhoneBookForm\";\nimport PhoneBookFilter from \"./components/PhoneBook/PhoneBookFilter\";\nimport filterContacts from \"./components/helpers/FilterContacts\";\nimport { Aside, Block } from \"./components/PhoneBook/PhoneBook.styled\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { name: \"Rosie Simpson\", number: \"459-12-56\", id: \"id-1\" },\n    { name: \"Hermione Kline\", number: \"443-89-12\", id: \"id-2\" },\n    { name: \"Eden Clements\", number: \"645-17-79\", id: \"id-3\" },\n    { name: \"Annie Copeland\", number: \"227-91-26\", id: \"id-4\" },\n  ]);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleChangeInput = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      case \"filter\":\n        setFilter(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = (e) => {\n    e.preventDefault();\n\n    if (\n      contacts.some((el) => el.name === name) ||\n      contacts.some((el) => el.number === number)\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      let contact = {\n        name: name,\n        number: number,\n        id: uuidv4(),\n      };\n      setContacts((prev) => [...prev, contact], setName(\"\"), setNumber(\"\"));\n    }\n  };\n  const handleDeleteContact = (e) => {\n    setContacts(() => contacts.filter((el) => el.id !== e.target.id));\n  };\n  const contactsArray = filterContacts(contacts, filter);\n  return (\n    <Aside>\n      <h1>Phonebook</h1>\n      <PhoneBookForm\n        contacts={contactsArray}\n        name={name}\n        number={number}\n        onInput={handleChangeInput}\n        onAddContact={handleAddContact}\n      />\n      <Block>\n        <h2>Contacts</h2>\n        <PhoneBookFilter filterValue={filter} onSetFilter={handleChangeInput} />\n        <PhoneBookList\n          contacts={contactsArray}\n          onDeleteContact={handleDeleteContact}\n        />\n      </Block>\n    </Aside>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}